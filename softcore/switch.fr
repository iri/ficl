\ ** switch.fr
\ ** SWITCH construct
\ ** Rick VanNorman (rvn@forth.com)
\ ** 1999

.( loading SWITCH -- R.v.Norman ) cr

\ ***
: LINK@  @ ;
: LINK,  HERE OVER @ , SWAP ! ;


\ ***
: SWITCHER ( i*x n head -- j*x )
   DUP CELL+ @ >R ( save default xt)
   BEGIN
      LINK@ ?DUP WHILE ( n a)
      2DUP CELL+ @ = IF ( match)
         NIP CELL+ CELL+ @ EXECUTE
         R> DROP EXIT
      THEN
   REPEAT R> EXECUTE ;
   

\ ***
: :SWITCH ( xt "name" -- addr )
\G Define a switch named `name', default behavior will be `xt'.
   CREATE  HERE 0 , SWAP ,  DOES> SWITCHER ;
   
: <SWITCH ( head xt n -- head )
   2 PICK LINK,  , , ;


\ ***
: [SWITCH ( "name" "default-word" -- head )
\G Define a switch named `name', the default word will be `default-word'.
   CREATE  HERE 0 ,  ' ,  DOES> SWITCHER ;
   
: [+SWITCH ( "name" -- head )
\G Extend switch `name'.
   ' >BODY ;
   
: SWITCH] ( head -- )
\G Close definition of switch.
   DROP ;
   

\ ***
: RUNS ( head n "word" -- )
\G For `n' run `word' at runtime.
   ' SWAP <SWITCH ;
   
: RUN: ( head n -- )
\G Define the behavior for `n'. Close the definition with `;'.
   :NONAME [CHAR] ; PARSE EVALUATE  POSTPONE ;  ( xt) SWAP <SWITCH ;


